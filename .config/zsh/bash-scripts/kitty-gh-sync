#!/bin/bash

# List of GitHub repositories with full paths
REPOS=(
    "$HOME/desktop/workspace/nobility:Twilight4/nobility"
    "$HOME/desktop/workspace/dotfiles:Twilight4/dotfiles"
    "$HOME/documents/org:Twilight4/org"
    "$HOME/.config/cheat:Twilight4/cheats"
)

# Commit message for changes
COMMIT_MESSAGE="Auto-commit: local changes"

# ANSI color codes for colored output
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
RED="\033[0;31m"
NC="\033[0m"  # No Color

# Iterate over each repository in the list
for entry in "${REPOS[@]}"; do
    repo_dir="${entry%%:*}"
    repo="${entry##*:}"

    # Clone the repository if it does not exist
    if [ ! -d "$repo_dir" ]; then
        echo -e "${GREEN}Cloning ${repo} into ${repo_dir}...${NC}"
        echo
        git clone "git@github.com:$repo.git" "$repo_dir"
    else
        echo
        echo -e "${YELLOW}$repo already cloned in $repo_dir.${NC}"
    fi

    # Navigate to the repository directory
    cd "$repo_dir" || continue

    # Check for any changes in the repository
    if [ -n "$(git status --porcelain)" ]; then
        echo -e "${GREEN}Changes detected in $(basename "$repo_dir"). Committing and pushing...${NC}"
        echo
        git add .
        git commit -m "$COMMIT_MESSAGE"
        git push
    else
        echo
        echo -e "${YELLOW}No changes in $(basename "$repo_dir").${NC}"
    fi

    # Back to the previous directory
    cd -
done

echo
echo -e "${GREEN}All repositories processed.${NC}"
