Users and Groups:
  systeminfo | findstr Domain   Check whether the Windows machine is part of the AD environment
                                if it shows "Domain" in output then yes, if we get "WORKGROUP" 
                                in the domain section, then it means that this machine is part of a local workgroup
  Get-ADUser  -Filter *         Get all active directory user accounts
  Get-ADUser -Filter * -SearchBase "CN=Users,DC=THMREDTEAM,DC=COM"
                                List any users that part of Users (CN)
  Get-ADUser -Filter * -SearchBase "OU=THM,DC=THMREDTEAM,DC=COM" 
                                List all users withing the "THM" OU
  
  Antivirus Software (AV):
  wmic /namespace:\\root\securitycenter2 path antivirusproduct
                                Enumerate AV software using Windows built-in tools
  Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntivirusProduct
                                The same result but as wmic using powershell, lists the third-party antiviruses and
                                windows defender if installed. Note that Windows servers may not have `SecurityCenter2`
                                namespace. Instead, it works for Windows workstations

Windows Defender:
  Get-Service WinDefend         Check the service state of Windows Defender
  Get-MpComputerStatus | select RealTimeProtectionEnabled
                                Get the current Windows Defender status, `MpComputerStatus` highlights 
                                whether Windows Defender is enabled or not
  Get-MpThreat                  Can provide us with threats details that have been detected using MS Defender
  
  Host-Based Firewall:
  Get-NetFirewallProfile | Format-Table Name, Enabled`
                                Check whether it is enabled
  Get-NetFirewallRule | findstr "Rule-Name" 
                                Find rule name to enumerate details about the Host-Based Firewall and its rules
  Set-NetFirewallProfile -Profile Domain, Public, Private -Enabled False
  Get-NetFirewallProfile | Format-Table Name, Enabled
                                If we have admin privileges on the current user we logged in with, then we try 
                                to disable one or more than one firewall profile
  Get-NetFirewallRule | select DisplayName, Enabled, Description
                                Check the current Firewall rules, whether allowing or denying by the firewall
  Test-NetConnection -ComputerName 127.0.0.1 -Port 80
                                If the host-based firewall is enabled, we need to test inbound connection without extra tools
  (New-Object System.Net.Sockets.TcpClient("127.0.0.1", "80")).Connected
                                As a result, we can confirm or deny the inbound connection on port 80 is open and
                                allowed in the firewall. Note that we can also test for remote targets in the same
                                network or domain names by specifying in the `-ComputerName` argument for the `Test-NetConnection`

Security Event Logging and Monitoring:
  Get-EventLog -List            Get a list of available event logs on the local machine, it can
                                give an insight into what applications and services are installed on the machine
  Get-Process | Where-Object { $_.ProcessName -eq "Sysmon" }
                                Detect whether the `sysmon` is available in the victim machine or not by looking for
                                a process or service that has been named "Sysmon" within the current process or services
  Get-CimInstance win32_service -Filter "Description = 'System Monitor service'"
  Get-Service | where-object {$_.DisplayName -like "*sysm*"}
                                Look for services
  reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WINEVT\Channels\Microsoft-Windows-Sysmon/Operational
                                Checking the Windows registry
  findstr /si '<ProcessCreate onmatch="exclude">' C:\tools\*
                                Once we detect it, we can try to find the sysmon configuration file if we have readable 
                                permission to understand what system administrators are monitoring

Endpoint Detection and Response (EDR):
  Invoke-EDRChecker: https://github.com/PwnDexter/Invoke-EDRChecker
  SharpEDRChecker: https://github.com/PwnDexter/SharpEDRChecker
                                Scripts for enumerating security products within the machine. They check for used Antivirus,
                                EDR, logging monitor products by checking file metadata, processes, DLL loaded into current
                                processes, Services, and drivers, directories

Application and Services:
  wmic product get name,version   List all installed applications and their version, we may find vulnerable software installed
                                  to exploit and escalate our system privileges or find plain-text credentials, that are left
                                  on the system that belongs to other systems or services
  Get-ChildItem -Hidden -Path C:\Users\kkidd\Desktop\
                                  Look for particular text strings, hidden directories, backup files

Internal Services:
  net start                       List the running services using the Windows command prompt to check if there are any interesting running services
  wmic service where "name like 'THM Demo'" get Name,PathName
                                  Look for the exact service name of `THM Demo`, which we need to find more information
  Get-Process -Name thm-demo      Find more details using the `Get-Process` cmdlet
  netstat -noa |findstr "LISTENING" |findstr "3212"`
                                  Once we find its process `ID`, check if providing a network service by listing the listening ports within the system
DNS enumeration:
  nslookup.exe                    Perform DNS zone transfer using the Microsoft tool `nslookup.exe`
  server MACHINE_IP               Once we execute it, we provide the DNS server that we need to ask, which in this case is the target machine (ipv4 address)
  ls -d redteam.com               Try the DNS zone transfer on the domain we find in the AD environment


Informational:
  The Distinguished Name (DN) is a collection of comma-separated key and value pairs used to identify unique
  records within the directory. The DN consists of Domain Component (DC), OrganizationalUnitName (OU), 
  Common Name (CN), and others. An example of DN: "CN=User1,CN=Users,DC=thmredteam,DC=com"

Host Security Solutions:
  Antivirus software
  Microsoft Windows Defender
  Host-based Firewall
  Security Event Logging and Monitoring 
  Host-based Intrusion Detection System and Host-based Intrusion Prevention System (HIDS/HIPS)
  Endpoint Detection and Response (EDR)

Network Security Solutions:
  Network Firewall
  Security Information and Event Management (SIEM)
  Intrusion Detection System and Intrusion Prevention System (NIDS/NIPS)

MS Defender works in three protection modes: Active, Passive, Disable modes:
  Active mode is used where the MS Defender runs as the primary antivirus software on the machine where provides protection and remediation. 
  Passive mode is run when a 3rd party antivirus software is installed. Therefore, it works as secondary antivirus software where it scans files and detects threats but does not provide remediation. 
  Disable mode is when the MS Defender is disabled or uninstalled from the system.

The following are some of the internal services that are commonly used that we are interested in:
	DNS Services
	Email Services
	Network File Share
	Web application
	Database service
